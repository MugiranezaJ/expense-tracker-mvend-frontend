[{"/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/index.js":"1","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/reportWebVitals.js":"2","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/App.js":"3","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/components/layout/navbar.js":"4","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/components/layout/footer.js":"5","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/components/layout/drawer.js":"6","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/services/promises.js":"7","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/redux/store.js":"8","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/redux/reducers/index.js":"9","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/redux/reducers/categoriesReducer.js":"10","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/redux/actions/fetchCategoriesAction.js":"11","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/services/protectRoute.js":"12","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/components/views/login.js":"13","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/redux/actions/loginAction.js":"14","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/redux/reducers/loginReducer.js":"15","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/protectedRoutes/index.js":"16","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/redux/actions/setProtectionAction.js":"17","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/redux/reducers/setProtectionReducer.js":"18","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/redux/actions/deleteAction.js":"19","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/redux/reducers/deleteReducer.js":"20","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/components/views/editExpenseModel.js":"21","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/redux/reducers/createExpenseReducer.js":"22","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/redux/actions/createExpenseAction.js":"23","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/redux/reducers/expenseReducer.js":"24","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/redux/actions/fetchExpenseAction.js":"25","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/redux/reducers/createCategoryReducer.js":"26","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/redux/actions/createCategoryAction.js":"27","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/redux/actions/updateExpenseAction.js":"28","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/redux/reducers/updateExpenseReducer.js":"29","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/components/views/createCategory.js":"30","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/components/views/createExpense.js":"31","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/components/views/landingPage.js":"32","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/components/views/listCategory.js":"33","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/components/views/listExpense.js":"34","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/components/views/expenseModel.js":"35","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/redux/reducers/fetchAllExpenseReducer.js":"36","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/redux/actions/fetchAllExpensesAction.js":"37","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/Routes/index.js":"38","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/redux/actions/axiosConfig.js":"39","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/redux/ActionTypes/Types.js":"40"},{"size":623,"mtime":1612683015241,"results":"41","hashOfConfig":"42"},{"size":362,"mtime":1611815624228,"results":"43","hashOfConfig":"42"},{"size":121,"mtime":1613382894366,"results":"44","hashOfConfig":"42"},{"size":1284,"mtime":1613391106931,"results":"45","hashOfConfig":"42"},{"size":1216,"mtime":1611822174721,"results":"46","hashOfConfig":"42"},{"size":3980,"mtime":1613325364830,"results":"47","hashOfConfig":"42"},{"size":1278,"mtime":1613391277893,"results":"48","hashOfConfig":"42"},{"size":672,"mtime":1612959786148,"results":"49","hashOfConfig":"42"},{"size":1068,"mtime":1613381278270,"results":"50","hashOfConfig":"42"},{"size":683,"mtime":1613391226695,"results":"51","hashOfConfig":"42"},{"size":733,"mtime":1613405986525,"results":"52","hashOfConfig":"42"},{"size":844,"mtime":1613383500383,"results":"53","hashOfConfig":"42"},{"size":5118,"mtime":1613391169107,"results":"54","hashOfConfig":"42"},{"size":926,"mtime":1613406709376,"results":"55","hashOfConfig":"42"},{"size":1040,"mtime":1612857331171,"results":"56","hashOfConfig":"42"},{"size":751,"mtime":1613382498547,"results":"57","hashOfConfig":"42"},{"size":154,"mtime":1613406812640,"results":"58","hashOfConfig":"42"},{"size":341,"mtime":1613391248749,"results":"59","hashOfConfig":"42"},{"size":1713,"mtime":1613464798453,"results":"60","hashOfConfig":"42"},{"size":2233,"mtime":1613464898530,"results":"61","hashOfConfig":"42"},{"size":7020,"mtime":1613391132992,"results":"62","hashOfConfig":"42"},{"size":964,"mtime":1613464607920,"results":"63","hashOfConfig":"42"},{"size":705,"mtime":1613464541728,"results":"64","hashOfConfig":"42"},{"size":916,"mtime":1613463680530,"results":"65","hashOfConfig":"42"},{"size":818,"mtime":1613406499047,"results":"66","hashOfConfig":"42"},{"size":972,"mtime":1613464407548,"results":"67","hashOfConfig":"42"},{"size":720,"mtime":1613464320829,"results":"68","hashOfConfig":"42"},{"size":813,"mtime":1613406888758,"results":"69","hashOfConfig":"42"},{"size":928,"mtime":1613391258561,"results":"70","hashOfConfig":"42"},{"size":4574,"mtime":1613391119625,"results":"71","hashOfConfig":"42"},{"size":7798,"mtime":1613391128638,"results":"72","hashOfConfig":"42"},{"size":1318,"mtime":1613383318037,"results":"73","hashOfConfig":"42"},{"size":5221,"mtime":1613466520221,"results":"74","hashOfConfig":"42"},{"size":2305,"mtime":1613382382226,"results":"75","hashOfConfig":"42"},{"size":7235,"mtime":1613465989652,"results":"76","hashOfConfig":"42"},{"size":712,"mtime":1613391245004,"results":"77","hashOfConfig":"42"},{"size":615,"mtime":1613406168090,"results":"78","hashOfConfig":"42"},{"size":1972,"mtime":1613382989553,"results":"79","hashOfConfig":"42"},{"size":255,"mtime":1613405933803,"results":"80","hashOfConfig":"42"},{"size":714,"mtime":1613464703225,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"m9c7od",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"84"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"84"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"84"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"84"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"84"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"84"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"84"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"84"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"84"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/index.js",[],["173","174"],"/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/reportWebVitals.js",[],"/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/App.js",[],"/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/components/layout/navbar.js",["175","176","177"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Drawer from './drawer';\nimport { logOut } from '../../services/protectRoute';\nimport { loginAction } from '../../redux/actions/loginAction';\nimport { connect } from 'react-redux';\nimport { setProtection } from '../../redux/actions/setProtectionAction';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nfunction ButtonAppBar(props) {\n  const classes = useStyles();\n  const isProtected = props.security.isProtected\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          {isProtected? <Drawer/> : null}\n          <Typography variant=\"h6\" className={classes.title}>\n            ETracker\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\nconst mapStateToProps = state =>({\n  security: state.protection\n});\nexport {ButtonAppBar};\nexport default connect(mapStateToProps, { setProtection})(ButtonAppBar);","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/components/layout/footer.js",[],"/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/components/layout/drawer.js",[],"/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/services/promises.js",[],["178","179"],"/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/redux/store.js",["180"],"import thunk from 'redux-thunk'\nimport RootReducer from './reducers'\nimport { createStore, applyMiddleware, compose } from 'redux'\n\nconst initialState = {};\nconst middlewares = [thunk];\nlet devtools = window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : x => x\n\nif (\n  process.env.NODE_ENV !== \"production\" &&\n  typeof window !== 'undefined' &&\n  window.__REDUX_DEVTOOLS_EXTENSION__\n) {\n  devtools = window.__REDUX_DEVTOOLS_EXTENSION__();\n}\n\nconst Store = createStore(\n  RootReducer,\n  initialState,\n  compose(applyMiddleware(...middlewares),\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n);\n\nexport default Store","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/redux/reducers/index.js",[],"/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/redux/reducers/categoriesReducer.js",[],"/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/redux/actions/fetchCategoriesAction.js",[],"/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/services/protectRoute.js",[],"/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/components/views/login.js",["181","182"],"import { Grid, TextField } from '@material-ui/core'\nimport React, { useEffect } from 'react'\nimport { connect, useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport * as yup from 'yup';\nimport Typography from '@material-ui/core/Typography';\nimport { Field, Formik } from 'formik';\nimport { closeSnackbar, loginAction } from '../../redux/actions/loginAction';\nimport Alert from '@material-ui/lab/Alert';\nimport IconButton from '@material-ui/core/IconButton';\nimport Collapse from '@material-ui/core/Collapse';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { protectRouted } from '../../services/protectRoute';\n\nconst useStyles = makeStyles({\n    root: {\n        margin:'20px 0',\n        width:'50%'\n    },\n  });\n\nconst validationSchema = yup.object({\n    email: yup\n        .string()\n        .email()\n        .required('Email is required')\n        .max(20),\n    password: yup\n        .string()\n        .required('Password is required')\n        .max(20),\n})\nfunction Login(props){\n    const dispatch = useDispatch()\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(true);\n\n    useEffect(() => {\n        protectRouted().then(result => {\n            props.history.push('/')\n        }).catch(err => {\n            return;\n        })\n    }, [])\n    if(props.login.success){\n        window.location.href = '/';\n    }\n    return(\n        <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        style={{flexDirection:\"column\", paddingTop:\"20px\"}}\n        >\n            <Typography><b>Login</b></Typography>\n            <Card className={classes.root}>\n                <Formik\n                    initialValues={{ email: '', password:''}}\n                    onSubmit={async (values, { setSubmitting, resetForm }) => {\n                        dispatch(loginAction(values))\n                    }}\n                    validationSchema={validationSchema}\n                    >\n                    {({values,errors,touched,handleChange,handleBlur,handleSubmit,isSubmitting}) => (\n                        <form onSubmit={handleSubmit}>\n                            {props.login.snackBarMessage ? setOpen(true) : ''}\n                            <Collapse in={props.login.snackBarMessage}>\n                                <Alert\n                                color='error'\n                                action={\n                                    <IconButton\n                                    aria-label=\"close\"\n                                    color=\"inherit\"\n                                    size=\"small\"\n                                    onClick={() => {\n                                        setOpen(false);\n                                        dispatch(closeSnackbar())\n                                    }}\n                                    >\n                                    <CloseIcon fontSize=\"inherit\" />\n                                    </IconButton>\n                                }\n                                >\n                                {props.login.error}\n                                </Alert>\n                            </Collapse>\n                            <CardContent>\n                                <Field\n                                    name='email'\n                                    label='Email *'\n                                    margin='normal'\n                                    fullWidth={true}\n                                    as={TextField}\n                                    error={touched.email && errors.email}\n                                    helperText={touched.email && errors.email}\n                                />\n                                <Field\n                                    name='password'\n                                    label='Password *'\n                                    type='password'\n                                    margin='normal'\n                                    fullWidth={true}\n                                    as={TextField}\n                                    error={touched.password && errors.password}\n                                    helperText={touched.password && errors.password}\n                                />\n                                \n                            </CardContent>\n                            <CardActions>\n                                <Button type=\"submit\" disabled={isSubmitting} size=\"small\" color=\"primary\">\n                                Login\n                                </Button>\n                            </CardActions>\n                        </form>\n                    )}\n                    </Formik>\n            </Card>\n        </Grid>\n    )\n}\n\nconst mapStateToProps = ({ login }) =>({\n    login\n});\n\nexport {Login};\nexport default connect(mapStateToProps, { loginAction, closeSnackbar})(Login);","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/redux/actions/loginAction.js",[],"/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/redux/reducers/loginReducer.js",[],"/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/protectedRoutes/index.js",[],"/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/redux/actions/setProtectionAction.js",[],"/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/redux/reducers/setProtectionReducer.js",[],"/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/redux/actions/deleteAction.js",[],"/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/redux/reducers/deleteReducer.js",["183","184"],"/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/components/views/editExpenseModel.js",["185","186","187","188","189","190","191","192","193","194","195","196"],"import { Grid, TextField } from '@material-ui/core'\nimport React, { useEffect, useState } from 'react'\nimport axios from \"axios\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Button from '@material-ui/core/Button';\nimport * as yup from 'yup';\nimport Typography from '@material-ui/core/Typography';\nimport { Field, Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { createExpenseAction } from '../../redux/actions/createExpenseAction';\nimport { closeSnackbar, updateExpenseAction } from '../../redux/actions/updateExpenseAction';\nimport { getExpenses } from '../../redux/actions/fetchExpenseAction';\n\nconst token = localStorage.getItem('etrackertoken'); \nconst useStyles = makeStyles({\n    root: {\n        margin:'20px 20px',\n        // maxWidth: 345,\n        // width:'50%'\n    },\n  });\nconst validationSchema = yup.object({\n    name: yup\n        .string()\n        .required('Name is required')\n        .max(20),\n})\n\n\nexport function UpdateExpense({ initialValues, categoryData, createExpense, updateExpense }){\n    const [data, setData] = useState('');\n    const [error,setError] = useState('');\n    const [errorOpen, seterrorOpen] = useState(false);\n    const [successOpen,setsuccessOpen] = useState(false);\n    const [open, setOpen] = useState(false);\n    const [suggestions, setSuggestions] = useState([]);\n    const [executed, setExecuted] = useState(false);\n    const dispatch = useDispatch()\n    const classes = useStyles();\n    \n    const config = {\n        headers: { Authorization: `Bearer ${token}` }\n    }\n    useEffect(() => {\n        handleSuggestions()\n      }, []);\n\n    const handleSuggestions = async (value) => {\n        axios.get('http://127.0.0.1:4000/expense/category/', config)\n        .then(result => {\n            setSuggestions(result.data)\n        })\n    }\n\n    window.onload = function(){\n        setExecuted(true)\n        handleSuggestions()\n    }\n    \n    const handleClose = () => {\n        dispatch(closeSnackbar())\n    };\n\n    function Alert(props) {\n        return <MuiAlert elevation={6} variant=\"filled\" {...props}  itemID='alert' />;\n    }\n\n    return(\n        <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        style={{flexDirection:\"column\", paddingTop:\"20px\"}}\n        >\n            <Typography><b>{!initialValues ? 'Create Expense' : 'Update Expense'}</b></Typography>\n            <Card className={classes.root}>\n                <Formik\n                    initialValues={ initialValues ? initialValues : {name:'', amount:'', number:'', categoryId:categoryData.id} }\n                    onSubmit={async (values, { setSubmitting, resetForm }) => {\n                        if(initialValues){\n                            const {id, categoryId, updatedAt, createdAt, ...dataSet} = {...values}\n                            const toBeUpdated = {...dataSet}\n                            dispatch(updateExpenseAction( initialValues.id,toBeUpdated))\n                            setTimeout(function(){\n                                dispatch(getExpenses(categoryData.id))\n                            }, 2000)\n                        }else{\n                            dispatch(createExpenseAction(values))\n                            setTimeout(function(){\n                                dispatch(getExpenses(values.categoryId))\n                              }, 1000)\n                            resetForm()\n                        }\n                    }}\n                    validationSchema={validationSchema}\n                    >\n                    {({values,errors,touched,handleChange,handleBlur,handleSubmit,isSubmitting}) => (\n                        <form onSubmit={handleSubmit}>\n                            <Snackbar open={updateExpense.snackbarError || createExpense.snackbarError} autoHideDuration={6000} onClose={handleClose} >\n                                <Alert onClose={handleClose} severity=\"error\" >\n                                Error: {updateExpense.error || createExpense.error ? JSON.stringify(updateExpense.error || createExpense.error).replace(/[\\\\'\"]+/g, '') : 'Error Not set'}\n                                </Alert>\n                            </Snackbar>\n                            <Snackbar open={updateExpense.snackbarMessage || createExpense.snackbarMessage} autoHideDuration={6000} onClose={handleClose} >\n                                <Alert onClose={handleClose} severity=\"success\" >\n                                Success: {updateExpense.message || createExpense.message ? JSON.stringify(updateExpense.message || createExpense.message).replace(/[\\\\'\"]+/g, '') : 'message Not set'}\n                                </Alert>\n                            </Snackbar>\n                            <CardContent>\n                                <Field\n                                    name='name'\n                                    label='Name *'\n                                    margin='normal'\n                                    fullWidth={true}\n                                    as={TextField}\n                                    error={touched.name && errors.name}\n                                    helperText={touched.name && errors.name}\n                                />\n                                <Field\n                                    name='amount'\n                                    label='Amount *'\n                                    margin='normal'\n                                    fullWidth={true}\n                                    as={TextField}\n                                    error={touched.amount && errors.amount}\n                                    helperText={touched.amount && errors.amount}\n                                />\n                                <Field\n                                    name='number'\n                                    label='Number *'\n                                    margin='normal'\n                                    fullWidth={true}\n                                    as={TextField}\n                                    error={touched.number && errors.number}\n                                    helperText={touched.number && errors.number}\n                                />\n                            </CardContent>\n                            <CardActions>\n                                <Button type=\"submit\" disabled={isSubmitting} size=\"small\" color=\"primary\">\n                                {!initialValues ? 'Create' : 'Update'}\n                                </Button>\n                                {successOpen}\n                            </CardActions>\n                        </form>\n                    )}\n                    </Formik>\n            </Card>\n        </Grid>\n    )\n}\n","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/redux/reducers/createExpenseReducer.js",[],"/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/redux/actions/createExpenseAction.js",[],"/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/redux/reducers/expenseReducer.js",[],"/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/redux/actions/fetchExpenseAction.js",[],"/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/redux/reducers/createCategoryReducer.js",[],"/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/redux/actions/createCategoryAction.js",[],"/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/redux/actions/updateExpenseAction.js",[],"/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/redux/reducers/updateExpenseReducer.js",[],"/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/components/views/createCategory.js",["197","198","199","200","201","202"],"import { Grid, TextField } from '@material-ui/core'\nimport React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Button from '@material-ui/core/Button';\nimport * as yup from 'yup';\nimport Typography from '@material-ui/core/Typography';\nimport { Field, Formik } from 'formik';\nimport { closeCategorySnackbar, createCategoryAction } from '../../redux/actions/createCategoryAction'\nimport { connect, useDispatch } from 'react-redux';\n\nconst useStyles = makeStyles({\n    root: {\n        margin:'20px 0',\n        // maxWidth: 345,\n        width:'50%'\n    },\n  });\nconst validationSchema = yup.object({\n    name: yup\n        .string()\n        .required('Name is required')\n        .max(20),\n})\n\nfunction CreateCategory(props){\n    const [data, setData] = useState('');\n    const [error,setError] = useState('');\n    const [errorOpen, seterrorOpen] = useState(false);\n    const [successOpen,setsuccessOpen] = useState(false);\n    const dispatch = useDispatch();\n    const classes = useStyles();\n    const token = localStorage.getItem('etrackertoken'); \n    const config = {\n        headers: { Authorization: `Bearer ${token}` }\n    }\n    \n\n    const handleClose = () => {\n        dispatch(closeCategorySnackbar())\n        seterrorOpen(false)\n        setsuccessOpen(false)\n    };\n    function Alert(props) {\n        return <MuiAlert elevation={6} variant=\"filled\" {...props}  itemID='alert' />;\n    }\n    return(\n        <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        style={{flexDirection:\"column\", paddingTop:\"20px\"}}\n        >\n            <Typography><b>Create Category</b></Typography>\n            <Card className={classes.root}>\n                <Formik\n                    initialValues={{ name: ''}}\n                    onSubmit={async (values, { setSubmitting, resetForm }) => {\n                        dispatch(createCategoryAction(values))\n                        resetForm()\n                    }}\n                    validationSchema={validationSchema}\n                    >\n                    {({values,errors,touched,handleChange,handleBlur,handleSubmit,isSubmitting}) => (\n                        <form onSubmit={handleSubmit}>\n                            <Snackbar open={props.createCategory.snackbarError} autoHideDuration={6000} onClose={handleClose} >\n                                <Alert onClose={handleClose} severity=\"error\" >\n                                Error: {props.createCategory.error ? JSON.stringify(props.createCategory.error).replace(/[\\\\'\"]+/g, '') : 'Error Not set'}\n                                </Alert>\n                            </Snackbar>\n                            <Snackbar open={props.createCategory.snackbarMessage} autoHideDuration={6000} onClose={handleClose} >\n                                <Alert onClose={handleClose} severity=\"success\" >\n                                Success: {props.createCategory.message ? JSON.stringify(props.createCategory.message).replace(/[\\\\'\"]+/g, '') : 'message Not set'}\n                                </Alert>\n                            </Snackbar>\n                            <CardContent>\n                                <Field\n                                    name='name'\n                                    label='Name *'\n                                    margin='normal'\n                                    fullWidth={true}\n                                    as={TextField}\n                                    error={touched.name && errors.name}\n                                    helperText={touched.name && errors.name}\n                                />\n                            </CardContent>\n                            <CardActions>\n                                <Button type=\"submit\" disabled={isSubmitting} size=\"small\" color=\"primary\">\n                                Create\n                                </Button>\n                                {successOpen}\n                            </CardActions>\n                        </form>\n                    )}\n                    </Formik>\n            </Card>\n        </Grid>\n    )\n}\n\nconst mapStateToProps = state => ({\n    createCategory: state.createCategory\n  })\n  \n  export default connect(mapStateToProps, { createCategoryAction })(CreateCategory)","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/components/views/createExpense.js",["203","204","205","206","207","208","209","210","211"],"import { Grid, TextField } from '@material-ui/core'\nimport React, { useEffect, useState } from 'react'\nimport axios from \"axios\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Button from '@material-ui/core/Button';\nimport * as yup from 'yup';\nimport Typography from '@material-ui/core/Typography';\nimport { Field, Formik } from 'formik';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { connect, useDispatch } from 'react-redux';\nimport { closeExpenseSnackbar, createExpenseAction } from '../../redux/actions/createExpenseAction';\n\nconst token = localStorage.getItem('etrackertoken'); \nconst useStyles = makeStyles({\n    root: {\n        margin:'20px 0',\n        // maxWidth: 345,\n        width:'50%'\n    },\n  });\nconst validationSchema = yup.object({\n    name: yup\n        .string()\n        .required('Name is required')\n        .max(20),\n})\n\n\nfunction CreateExpense(props){\n    const [data, setData] = useState('');\n    const [error,setError] = useState('');\n    const [errorOpen, seterrorOpen] = useState(false);\n    const [successOpen,setsuccessOpen] = useState(false);\n    const [open, setOpen] = useState(false);\n    const [suggestions, setSuggestions] = useState([]);\n    const [executed, setExecuted] = useState(false);\n    const dispatch = useDispatch()\n    const classes = useStyles();\n    \n    const config = {\n        headers: { Authorization: `Bearer ${token}` }\n    }\n    useEffect(() => {\n        handleSuggestions()\n      }, []);\n\n    const handleSuggestions = async (value) => {\n        axios.get('http://127.0.0.1:4000/expense/category/', config)\n        .then(result => {\n            setSuggestions(result.data)\n        })\n    }\n\n    window.onload = function(){\n        setExecuted(true)\n        handleSuggestions()\n    }\n    \n    const handleClose = () => {\n        dispatch(closeExpenseSnackbar())\n    };\n    const handleCloseSelect = () => {\n        setOpen(false);\n    };\n\n    const handleOpenSelect = () => {\n        setOpen(true);\n    };\n    function Alert(props) {\n        return <MuiAlert elevation={6} variant=\"filled\" {...props}  itemID='alert' />;\n    }\n    return(\n        <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        style={{flexDirection:\"column\", paddingTop:\"20px\"}}\n        >\n            <Typography><b>Create Espense</b></Typography>\n            <Card className={classes.root}>\n                <Formik\n                    initialValues={props.initialValues? props.initialValues : { name: '', amount:'', number:'', categoryId:''}}\n                    onSubmit={async (values, { setSubmitting, resetForm }) => {\n                        dispatch(createExpenseAction(values))\n                        resetForm()\n                    }}\n                    validationSchema={validationSchema}\n                    >\n                    {({values,errors,touched,handleChange,handleBlur,handleSubmit,isSubmitting}) => (\n                        <form onSubmit={handleSubmit}>\n                            <Snackbar open={props.createExpense.snackbarError} autoHideDuration={6000} onClose={handleClose} >\n                                <Alert onClose={handleClose} severity=\"error\" >\n                                Error: {props.createExpense.error ? JSON.stringify(props.createExpense.error).replace(/[\\\\'\"]+/g, '') : 'Error Not set'}\n                                </Alert>\n                            </Snackbar>\n                            <Snackbar open={props.createExpense.snackbarMessage} autoHideDuration={6000} onClose={handleClose} >\n                                <Alert onClose={handleClose} severity=\"success\" >\n                                Success: {props.createExpense.message ? JSON.stringify(props.createExpense.message).replace(/[\\\\'\"]+/g, '') : 'message Not set'}\n                                </Alert>\n                            </Snackbar>\n                            <CardContent>\n                                <Field\n                                    name='name'\n                                    label='Name *'\n                                    margin='normal'\n                                    fullWidth={true}\n                                    as={TextField}\n                                    error={touched.name && errors.name}\n                                    helperText={touched.name && errors.name}\n                                />\n                                <Field\n                                    name='amount'\n                                    label='Amount *'\n                                    margin='normal'\n                                    fullWidth={true}\n                                    as={TextField}\n                                    error={touched.amount && errors.amount}\n                                    helperText={touched.amount && errors.amount}\n                                />\n                                <Field\n                                    name='number'\n                                    label='Number *'\n                                    margin='normal'\n                                    fullWidth={true}\n                                    as={TextField}\n                                    error={touched.number && errors.number}\n                                    helperText={touched.number && errors.number}\n                                />\n                                <FormControl className={classes.formControl} fullWidth={true}>\n                                    <InputLabel id=\"demo-controlled-open-select-label\">Category</InputLabel>\n                                    <Select\n                                    name='categoryId'\n                                    labelId=\"demo-controlled-open-select-label\"\n                                    id=\"demo-controlled-open-select\"\n                                    open={open}\n                                    defaultValue='xd'\n                                    onClose={handleCloseSelect}\n                                    onOpen={handleOpenSelect}\n                                    onChange={handleChange}\n                                    >\n                                    <MenuItem disabled={true} value=\"\">\n                                        <em>None</em>\n                                    </MenuItem>\n                                    {\n                                        suggestions.map(item => (\n                                            <MenuItem value={item.category.id}>{item.category.name}</MenuItem>\n                                        ))\n                                    }\n                                    </Select>\n                                </FormControl>\n                            </CardContent>\n                            <CardActions>\n                                <Button type=\"submit\" disabled={isSubmitting} size=\"small\" color=\"primary\">\n                                Create\n                                </Button>\n                                {successOpen}\n                            </CardActions>\n                        </form>\n                    )}\n                    </Formik>\n            </Card>\n        </Grid>\n    )\n}\n\nconst mapStateToProps = state => ({\n    createExpense: state.createExpense\n  })\n  \n  export default connect(mapStateToProps, { createExpenseAction })(CreateExpense)","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/components/views/landingPage.js",["212"],"import { Box, Grid } from '@material-ui/core'\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux';\nimport { getAllExpenses } from '../../redux/actions/fetchAllExpensesAction';\nimport { getCategories } from '../../redux/actions/fetchCategoriesAction';\n\nfunction Landing(props){\n    useEffect(() => {\n        props.getCategories()\n        props.getAllExpenses()\n    }, [])\n    const categoriesLen = props.categoriesData.categories.length\n    const expensesLen = props.expensesData.total\n    return(\n        <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        style={{minHeight:\"500px\"}}\n        \n        >\n            <Box display=\"flex\">\n                <Box padding=\"15px\">\n                    <h4>Categories</h4>\n                    <Box textAlign=\"center\">{categoriesLen}</Box>\n                </Box>\n                <Box padding=\"15px\">\n                    <h4>Expenses</h4>\n                    <Box textAlign=\"center\">{expensesLen}</Box>\n                </Box>\n            </Box>\n        </Grid>\n    )\n}\n\nconst mapStateToProps = state =>({\n    categoriesData: state.fetchCategories,\n    expensesData: state.fetchAllExpenses\n});\nexport {Landing};\nexport default connect(mapStateToProps, { getCategories, getAllExpenses })(Landing);","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/components/views/listCategory.js",["213","214","215"],"/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/components/views/listExpense.js",["216","217"],"import React, { useEffect } from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { Button, Grid } from '@material-ui/core';\nimport { connect, useDispatch } from 'react-redux';\nimport { getAllExpenses } from '../../redux/actions/fetchAllExpensesAction';\n\n\nfunction ListExpense( props ) {\n    const dispatch = useDispatch();\n    useEffect(() =>{\n        handleExpenses()\n    }, [])\n\n    const handleExpenses = async () => {\n      dispatch(getAllExpenses())\n    }\n    const columns = [\n      { field: 'id', headerName: 'ID', width: 150 },\n      { field: 'name', headerName: 'Name', width: 150 },\n      { field: 'number', headerName: 'Number', width: 100 },\n      { field: 'amount', headerName: 'Amount', width: 150 },\n      { field: 'categoryId', headerName: 'Category', width: 150 },\n      { field: 'createdAt', headerName: 'Date created', width: 250 },\n      // {\n      //   field: 'edit',\n      //   headerName: 'Edit',\n      //   width: 150,\n      //   renderCell: (params) => (\n      //     <Button\n      //       variant=\"contained\"\n      //       color=\"primary\"\n      //       size=\"small\"\n      //       style={{ marginLeft: 16 }}\n      //       onClick={()=> {\n      //         // setEditData(params.row)\n      //         // setEditOpen(true)\n      //       }}\n      //     >\n      //       Edit\n      //     </Button>\n      // )},\n      // {\n      //   field: 'delete',\n      //   headerName: 'Delete',\n      //   width: 150,\n      //   renderCell: (params) => (\n      //     <Button\n      //       variant=\"contained\"\n      //       color=\"primary\"\n      //       size=\"small\"\n      //       style={{ marginLeft: 16 }}\n      //       onClick={()=> {\n      //         // dispatch(deleteExpenseAction(params.row.id))\n      //       }}\n      //     >\n      //       Delete\n      //     </Button>\n      // )}\n    ]\n\n  return (\n    <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n    >\n        <div style={{ height: 400, width: '90%'}}>\n        <DataGrid rows={props.expenseState.expenses} columns={columns} pageSize={5} checkboxSelection />\n        </div>\n    </Grid>\n  );\n}\n\nconst mapStateToProps = ({fetchExpenses}) => ({\nexpenseState: fetchExpenses\n})\n\nexport default connect(mapStateToProps, { getAllExpenses })(ListExpense)","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/components/views/expenseModel.js",["218"],"/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/redux/reducers/fetchAllExpenseReducer.js",[],"/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/redux/actions/fetchAllExpensesAction.js",[],"/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/Routes/index.js",["219","220"],"import React, { useEffect, useState } from 'react'\nimport {BrowserRouter as Router, Redirect, Switch, Route} from 'react-router-dom'\nimport { createBrowserHistory } from 'history';\nimport Landing from '../components/views/landingPage';\nimport CreateCategory from '../components/views/createCategory';\nimport ListCategory from '../components/views/listCategory';\nimport CreateExpense from '../components/views/createExpense';\nimport ListExpense from '../components/views/listExpense';\nimport Login from '../components/views/login'\nimport NavBar from '../components/layout/navbar'\nimport Footer from '../components/layout/footer'\nimport { checkToken, protectRouted } from '../services/protectRoute';\nimport ProtectedRoute from '../protectedRoutes';\n\nconst history = createBrowserHistory()\nexport default function InternalRoutes(){\n    const[isProtected, setIsProtected] = useState(false);\n    useEffect(() => {\n        setIsProtected(checkToken())\n        // protectRouted().then(result => {\n        //     setIsProtected(result)\n        // }).catch(err => {\n        //     setIsProtected(err)\n        // })\n    }, []);\n\n    return(\n        <Router history={history}>  \n            <NavBar />\n            <Switch>\n               <ProtectedRoute exact path='/' isLoggedin={checkToken()}  seen={true} component={Landing} />\n               <ProtectedRoute path='/category/create' isLoggedin={checkToken()} seen={true} component={CreateCategory}/>\n               <ProtectedRoute path='/category/view' isLoggedin={checkToken()} seen={true} component={ListCategory}/>\n               <ProtectedRoute path=\"/expense/create\" isLoggedin={checkToken()} seen={true} component={CreateExpense} />\n               <ProtectedRoute path=\"/expense/view\" isLoggedin={checkToken()} seen={true} component={ListExpense} />\n               <Route path=\"/login\" component={Login} />\n               <Redirect to=\"/PageNotFound\" />\n            </Switch>\n            <Footer />\n        </Router>\n    )\n}","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/redux/actions/axiosConfig.js",[],"/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/redux/ActionTypes/Types.js",[],{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","replacedBy":"224"},{"ruleId":"225","severity":1,"message":"226","line":6,"column":8,"nodeType":"227","messageId":"228","endLine":6,"endColumn":14},{"ruleId":"225","severity":1,"message":"229","line":8,"column":10,"nodeType":"227","messageId":"228","endLine":8,"endColumn":16},{"ruleId":"225","severity":1,"message":"230","line":9,"column":10,"nodeType":"227","messageId":"228","endLine":9,"endColumn":21},{"ruleId":"221","replacedBy":"231"},{"ruleId":"223","replacedBy":"232"},{"ruleId":"225","severity":1,"message":"233","line":14,"column":3,"nodeType":"227","messageId":"228","endLine":14,"endColumn":11},{"ruleId":"225","severity":1,"message":"234","line":40,"column":12,"nodeType":"227","messageId":"228","endLine":40,"endColumn":16},{"ruleId":"235","severity":1,"message":"236","line":48,"column":8,"nodeType":"237","endLine":48,"endColumn":10,"suggestions":"238"},{"ruleId":"225","severity":1,"message":"239","line":1,"column":9,"nodeType":"227","messageId":"228","endLine":1,"endColumn":23},{"ruleId":"225","severity":1,"message":"240","line":2,"column":9,"nodeType":"227","messageId":"228","endLine":2,"endColumn":32},{"ruleId":"225","severity":1,"message":"241","line":36,"column":12,"nodeType":"227","messageId":"228","endLine":36,"endColumn":16},{"ruleId":"225","severity":1,"message":"242","line":36,"column":18,"nodeType":"227","messageId":"228","endLine":36,"endColumn":25},{"ruleId":"225","severity":1,"message":"243","line":37,"column":12,"nodeType":"227","messageId":"228","endLine":37,"endColumn":17},{"ruleId":"225","severity":1,"message":"244","line":37,"column":18,"nodeType":"227","messageId":"228","endLine":37,"endColumn":26},{"ruleId":"225","severity":1,"message":"245","line":38,"column":12,"nodeType":"227","messageId":"228","endLine":38,"endColumn":21},{"ruleId":"225","severity":1,"message":"246","line":38,"column":23,"nodeType":"227","messageId":"228","endLine":38,"endColumn":35},{"ruleId":"225","severity":1,"message":"247","line":39,"column":24,"nodeType":"227","messageId":"228","endLine":39,"endColumn":38},{"ruleId":"225","severity":1,"message":"234","line":40,"column":12,"nodeType":"227","messageId":"228","endLine":40,"endColumn":16},{"ruleId":"225","severity":1,"message":"248","line":40,"column":18,"nodeType":"227","messageId":"228","endLine":40,"endColumn":25},{"ruleId":"225","severity":1,"message":"249","line":41,"column":12,"nodeType":"227","messageId":"228","endLine":41,"endColumn":23},{"ruleId":"225","severity":1,"message":"250","line":42,"column":12,"nodeType":"227","messageId":"228","endLine":42,"endColumn":20},{"ruleId":"235","severity":1,"message":"251","line":51,"column":10,"nodeType":"237","endLine":51,"endColumn":12,"suggestions":"252"},{"ruleId":"225","severity":1,"message":"241","line":31,"column":12,"nodeType":"227","messageId":"228","endLine":31,"endColumn":16},{"ruleId":"225","severity":1,"message":"242","line":31,"column":18,"nodeType":"227","messageId":"228","endLine":31,"endColumn":25},{"ruleId":"225","severity":1,"message":"243","line":32,"column":12,"nodeType":"227","messageId":"228","endLine":32,"endColumn":17},{"ruleId":"225","severity":1,"message":"244","line":32,"column":18,"nodeType":"227","messageId":"228","endLine":32,"endColumn":26},{"ruleId":"225","severity":1,"message":"245","line":33,"column":12,"nodeType":"227","messageId":"228","endLine":33,"endColumn":21},{"ruleId":"225","severity":1,"message":"253","line":38,"column":11,"nodeType":"227","messageId":"228","endLine":38,"endColumn":17},{"ruleId":"225","severity":1,"message":"241","line":38,"column":12,"nodeType":"227","messageId":"228","endLine":38,"endColumn":16},{"ruleId":"225","severity":1,"message":"242","line":38,"column":18,"nodeType":"227","messageId":"228","endLine":38,"endColumn":25},{"ruleId":"225","severity":1,"message":"243","line":39,"column":12,"nodeType":"227","messageId":"228","endLine":39,"endColumn":17},{"ruleId":"225","severity":1,"message":"244","line":39,"column":18,"nodeType":"227","messageId":"228","endLine":39,"endColumn":26},{"ruleId":"225","severity":1,"message":"245","line":40,"column":12,"nodeType":"227","messageId":"228","endLine":40,"endColumn":21},{"ruleId":"225","severity":1,"message":"246","line":40,"column":23,"nodeType":"227","messageId":"228","endLine":40,"endColumn":35},{"ruleId":"225","severity":1,"message":"247","line":41,"column":24,"nodeType":"227","messageId":"228","endLine":41,"endColumn":38},{"ruleId":"225","severity":1,"message":"250","line":44,"column":12,"nodeType":"227","messageId":"228","endLine":44,"endColumn":20},{"ruleId":"235","severity":1,"message":"251","line":53,"column":10,"nodeType":"237","endLine":53,"endColumn":12,"suggestions":"254"},{"ruleId":"235","severity":1,"message":"255","line":11,"column":8,"nodeType":"237","endLine":11,"endColumn":10,"suggestions":"256"},{"ruleId":"235","severity":1,"message":"257","line":24,"column":8,"nodeType":"237","endLine":24,"endColumn":10,"suggestions":"258"},{"ruleId":"225","severity":1,"message":"259","line":26,"column":11,"nodeType":"227","messageId":"228","endLine":26,"endColumn":21},{"ruleId":"260","severity":1,"message":"261","line":101,"column":5,"nodeType":"262","messageId":"263","endLine":101,"endColumn":47},{"ruleId":"225","severity":1,"message":"226","line":3,"column":10,"nodeType":"227","messageId":"228","endLine":3,"endColumn":16},{"ruleId":"235","severity":1,"message":"264","line":12,"column":8,"nodeType":"237","endLine":12,"endColumn":10,"suggestions":"265"},{"ruleId":"235","severity":1,"message":"266","line":40,"column":8,"nodeType":"237","endLine":40,"endColumn":10,"suggestions":"267"},{"ruleId":"225","severity":1,"message":"268","line":12,"column":22,"nodeType":"227","messageId":"228","endLine":12,"endColumn":35},{"ruleId":"225","severity":1,"message":"269","line":17,"column":11,"nodeType":"227","messageId":"228","endLine":17,"endColumn":22},"no-native-reassign",["270"],"no-negated-in-lhs",["271"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'logOut' is defined but never used.","'loginAction' is defined but never used.",["270"],["271"],"'devtools' is assigned a value but never used.","'open' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.","ArrayExpression",["272"],"'DELETE_LOADING' is defined but never used.","'DELETE_CATEGORY_LOADING' is defined but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'errorOpen' is assigned a value but never used.","'seterrorOpen' is assigned a value but never used.","'setsuccessOpen' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'suggestions' is assigned a value but never used.","'executed' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleSuggestions'. Either include it or remove the dependency array.",["273"],"'config' is assigned a value but never used.",["274"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["275"],"React Hook useEffect has missing dependencies: 'handleCategories' and 'token'. Either include them or remove the dependency array.",["276"],"'handleOpen' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has a missing dependency: 'handleExpenses'. Either include it or remove the dependency array.",["277"],"React Hook useEffect has missing dependencies: 'dataSet' and 'handleExpense'. Either include them or remove the dependency array.",["278"],"'protectRouted' is defined but never used.","'isProtected' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},{"desc":"281","fix":"283"},{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},"Update the dependencies array to be: [props.history]",{"range":"292","text":"293"},"Update the dependencies array to be: [handleSuggestions]",{"range":"294","text":"295"},{"range":"296","text":"295"},"Update the dependencies array to be: [props]",{"range":"297","text":"298"},"Update the dependencies array to be: [handleCategories, token]",{"range":"299","text":"300"},"Update the dependencies array to be: [handleExpenses]",{"range":"301","text":"302"},"Update the dependencies array to be: [dataSet, handleExpense]",{"range":"303","text":"304"},[1518,1520],"[props.history]",[1874,1876],"[handleSuggestions]",[1882,1884],[394,396],"[props]",[1072,1074],"[handleCategories, token]",[395,397],"[handleExpenses]",[1511,1513],"[dataSet, handleExpense]"]