[{"/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/index.js":"1","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/reportWebVitals.js":"2","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/App.js":"3","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/routes/index.js":"4","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/components/layout/index.js":"5","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/components/RouteWithLayout/index.js":"6","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/components/layout/navbar.js":"7","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/components/layout/footer.js":"8","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/components/landingPage.js":"9","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/components/layout/drawer.js":"10","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/components/createCategory.js":"11","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/components/createExpense.js":"12","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/components/listCategory.js":"13","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/components/listExpense.js":"14","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/services/createCategory.js":"15","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/services/categorySuggestions.js":"16","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/services/promises.js":"17","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/components/expenseModel.js":"18"},{"size":501,"mtime":1612089604834,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1611815624228,"results":"21","hashOfConfig":"20"},{"size":366,"mtime":1611818220576,"results":"22","hashOfConfig":"20"},{"size":1470,"mtime":1612112398694,"results":"23","hashOfConfig":"20"},{"size":607,"mtime":1611817422402,"results":"24","hashOfConfig":"20"},{"size":542,"mtime":1611817029886,"results":"25","hashOfConfig":"20"},{"size":882,"mtime":1611822486737,"results":"26","hashOfConfig":"20"},{"size":1216,"mtime":1611822174721,"results":"27","hashOfConfig":"20"},{"size":290,"mtime":1611819143784,"results":"28","hashOfConfig":"20"},{"size":3685,"mtime":1611823242295,"results":"29","hashOfConfig":"20"},{"size":4633,"mtime":1611911222252,"results":"30","hashOfConfig":"20"},{"size":8747,"mtime":1612089574559,"results":"31","hashOfConfig":"20"},{"size":2764,"mtime":1612127698783,"results":"32","hashOfConfig":"20"},{"size":2523,"mtime":1612112956007,"results":"33","hashOfConfig":"20"},{"size":903,"mtime":1611905039207,"results":"34","hashOfConfig":"20"},{"size":562,"mtime":1612099539131,"results":"35","hashOfConfig":"20"},{"size":1233,"mtime":1612286436648,"results":"36","hashOfConfig":"20"},{"size":3770,"mtime":1612288429809,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"m9c7od",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/index.js",[],["80","81"],"/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/reportWebVitals.js",[],"/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/App.js",[],"/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/routes/index.js",[],"/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/components/layout/index.js",[],"/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/components/RouteWithLayout/index.js",[],"/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/components/layout/navbar.js",[],"/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/components/layout/footer.js",[],"/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/components/landingPage.js",[],"/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/components/layout/drawer.js",[],"/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/components/createCategory.js",[],"/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/components/createExpense.js",["82","83","84"],"import { Grid, TextField } from '@material-ui/core'\nimport React, { useEffect, useState } from 'react'\nimport axios from \"axios\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Button from '@material-ui/core/Button';\nimport * as yup from 'yup';\nimport Typography from '@material-ui/core/Typography';\nimport { Field, Formik } from 'formik';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { findSuggestions } from '../services/categorySuggestions';\n\nconst token = localStorage.getItem('etrackertoken'); \nconst useStyles = makeStyles({\n    root: {\n        margin:'20px 0',\n        // maxWidth: 345,\n        width:'50%'\n    },\n  });\nconst validationSchema = yup.object({\n    name: yup\n        .string()\n        .required('Name is required')\n        .max(20),\n})\n\n\nexport function CreateExpense(){\n    const [data, setData] = useState('');\n    const [error,setError] = useState('');\n    const [errorOpen, seterrorOpen] = useState(false);\n    const [successOpen,setsuccessOpen] = useState(false);\n    const [open, setOpen] = useState(false);\n    const [suggestions, setSuggestions] = useState([]);\n    const [executed, setExecuted] = useState(false);\n    const classes = useStyles();\n    \n    const config = {\n        headers: { Authorization: `Bearer ${token}` }\n    }\n    useEffect(() => {\n        handleSuggestions()\n      }, []);\n\n    const handleSuggestions = async (value) => {\n        // const dataSet = await findSuggestions(token)\n        // console.log(\"QQ: \" + dataSet)\n        // setSuggestions(dataSet)\n        axios.get('http://127.0.0.1:4000/expense/category/', config)\n        .then(result => {\n            console.log(\"___________REQUEST___________\")\n            console.log(result.data)\n            // let data = result.data;\n            setSuggestions(result.data)\n        })\n        // axios.get(`${process.env.REACT_APP_BACKEND_LINK}/search/locations/all`)\n        // .then(res => {\n        //     setSuggestions(res.data.locations.rows)\n        // })\n    }\n    // window.onload = async function(){\n    //     if(!executed){\n    //         const dataSet = await findSuggestions(token)\n    //         console.log(\"ooooooooooooooooo\")\n    //         console.log(dataSet)\n    //         setExecuted(true)\n    //         setSuggestions(...dataSet)\n    //     }\n    //   }\n\n    window.onload = function(){\n        setExecuted(true)\n        handleSuggestions()\n    }\n    \n    const handleClose = () => {\n        seterrorOpen(false)\n        setsuccessOpen(false)\n    };\n    const handleCloseSelect = () => {\n        setOpen(false);\n    };\n\n    const handleOpenSelect = () => {\n        setOpen(true);\n    };\n    function Alert(props) {\n        return <MuiAlert elevation={6} variant=\"filled\" {...props}  itemID='alert' />;\n    }\n    console.log(suggestions)\n    console.log(\"-------------------------------s\")\n    return(\n        <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        style={{flexDirection:\"column\", paddingTop:\"20px\"}}\n        >\n            <Typography><b>Create Espense</b></Typography>\n            <Card className={classes.root}>\n                <Formik\n                    initialValues={{ name: '', amount:'', number:'', categoryId:''}}\n                    onSubmit={async (values, { setSubmitting, resetForm }) => {\n                        axios.post('http://127.0.0.1:4000/expense/', values, config)\n                        .then(result => {\n                            setData(result.data);\n                            setError('')\n                            setsuccessOpen(true);\n                            resetForm();\n                        })\n                        .catch(err => {\n                            console.log(\"___________REQUEST_ERROR___________\")\n                            console.log(err.response.data)\n                            setError(err.response.data);\n                            seterrorOpen(true);\n                        })\n                    }}\n                    validationSchema={validationSchema}\n                    >\n                    {({values,errors,touched,handleChange,handleBlur,handleSubmit,isSubmitting}) => (\n                        <form onSubmit={handleSubmit}>\n                            <Snackbar open={errorOpen} autoHideDuration={6000} onClose={handleClose} >\n                                <Alert onClose={handleClose} severity=\"error\" >\n                                Error: {error ? JSON.stringify(error.error).replace(/[\\\\'\"]+/g, '') : 'Error Not set'}\n                                </Alert>\n                            </Snackbar>\n                            <Snackbar open={successOpen} autoHideDuration={6000} onClose={handleClose} >\n                                <Alert onClose={handleClose} severity=\"success\" >\n                                Success: {data ? JSON.stringify(data.message).replace(/[\\\\'\"]+/g, '') : 'message Not set'}\n                                </Alert>\n                            </Snackbar>\n                            <CardContent>\n                                <Field\n                                    name='name'\n                                    label='Name *'\n                                    margin='normal'\n                                    fullWidth={true}\n                                    as={TextField}\n                                    error={touched.name && errors.name}\n                                    helperText={touched.name && errors.name}\n                                />\n                                <Field\n                                    name='amount'\n                                    label='Amount *'\n                                    margin='normal'\n                                    fullWidth={true}\n                                    as={TextField}\n                                    error={touched.amount && errors.amount}\n                                    helperText={touched.amount && errors.amount}\n                                />\n                                <Field\n                                    name='number'\n                                    label='Number *'\n                                    margin='normal'\n                                    fullWidth={true}\n                                    as={TextField}\n                                    error={touched.number && errors.number}\n                                    helperText={touched.number && errors.number}\n                                />\n                                <FormControl className={classes.formControl} fullWidth={true}>\n                                    <InputLabel id=\"demo-controlled-open-select-label\">Category</InputLabel>\n                                    <Select\n                                    name='categoryId'\n                                    labelId=\"demo-controlled-open-select-label\"\n                                    id=\"demo-controlled-open-select\"\n                                    open={open}\n                                    onClose={handleCloseSelect}\n                                    onOpen={handleOpenSelect}\n                                    // value={age}\n                                    onChange={handleChange}\n                                    >\n                                    <MenuItem disabled={true} value=\"\">\n                                        <em>None</em>\n                                    </MenuItem>\n                                    {\n                                        suggestions.map(item => (\n                                            <MenuItem value={item.category.id}>{item.category.name}</MenuItem>\n                                        ))\n                                    }\n                                    </Select>\n                                </FormControl>\n                            </CardContent>\n                            <CardActions>\n                                <Button type=\"submit\" disabled={isSubmitting} size=\"small\" color=\"primary\">\n                                Create\n                                </Button>\n                                {successOpen}\n                            </CardActions>\n                        </form>\n                    )}\n                    </Formik>\n            </Card>\n        </Grid>\n    )\n}\n","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/components/listCategory.js",["85","86","87","88"],"import { Button, Grid } from '@material-ui/core'\nimport React, { useEffect, useState } from 'react';\nimport { fetchCategory } from '../services/promises'\n// import { DataGrid } from '@material-ui/data-grid';\nimport { findSuggestions } from '../services/categorySuggestions';\nimport {\n    DataGrid,\n    ColDef,\n    ValueGetterParams,\n    CellParams,\n    GridApi\n  } from \"@material-ui/data-grid\";\nimport { ExpenseModel } from './expenseModel';\n\n \n// const columns = [\n//   { field: 'id', headerName: 'ID', width: 150 },\n//   { field: 'name', headerName: 'Category name', width: 300 },\n//   { field: 'createdAt', headerName: 'Date created', width: 300 },\n// ];\n\n\nexport default function ListCategory() {\n    const [categories, setCategories] = useState([])\n    const token = localStorage.getItem('etrackertoken'); \n    const [data, setData] = useState();\n    const [open, setOpen] = React.useState(false);\n\n    useEffect(() =>{\n        handleCategories(token)\n    }, [])\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleCategories = async () => {\n        fetchCategory(token).then(result => {\n            setCategories(result);\n        })\n        .catch(err => {\n            console.log(err)\n        })\n    }\n\n    const columns: ColDef[] = [\n        { field: 'id', headerName: 'ID', width: 150 },\n        { field: 'name', headerName: 'Category name', width: 300 },\n        { field: 'createdAt', headerName: 'Date created', width: 300 },\n        {\n          field: \"\",\n          headerName: \"Button\",\n          sortable: false,\n          width: 100,\n          disableClickEventBubbling: true,\n          renderCell: (params: CellParams) => {\n            const onClick = () => {\n              const api: GridApi = params.api;\n              const fields = api\n                .getAllColumns()\n                .map((c) => c.field)\n                .filter((c) => c !== \"__check__\" && !!c);\n              const thisRow = {};\n      \n              fields.forEach((f) => {\n                thisRow[f] = params.getValue(f);\n              });\n              setData(thisRow)\n              setOpen(true)\n            //   console.log(thisRow)\n            //   return alert(JSON.stringify(thisRow, null, 4));\n            };\n      \n            return <Button onClick={onClick}>Click</Button>;\n          }\n        }\n    ]\n  return (\n    <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n    >\n        <div style={{ height: 400, width: '90%'}}>\n        <DataGrid rows={categories} columns={columns} pageSize={5} checkboxSelection />\n        </div>\n        <ExpenseModel data={data} open={open} handleClose={handleClose}/>\n    </Grid>\n  );\n}\n","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/components/listExpense.js",["89","90","91","92","93"],"import { Grid } from '@material-ui/core'\n\nimport React, { useEffect, useState } from 'react';\nimport { fetchCategory, fetchExpense } from '../services/promises'\nimport { DataGrid } from '@material-ui/data-grid';\nimport { findSuggestions } from '../services/categorySuggestions';\n\nconst columns = [\n  { field: 'id', headerName: 'ID', width: 150 },\n  { field: 'name', headerName: 'Category name', width: 300 },\n  { field: 'createdAt', headerName: 'Date created', width: 300 },\n//   {\n//     field: 'age',\n//     headerName: 'Age',\n//     type: 'number',\n//     width: 90,\n//   },\n//   {\n//     field: 'fullName',\n//     headerName: 'Full name',\n//     description: 'This column has a value getter and is not sortable.',\n//     sortable: false,\n//     width: 160,\n//     valueGetter: (params) =>\n//       `${params.getValue('firstName') || ''} ${params.getValue('lastName') || ''}`,\n//   },\n];\n\n\n\nexport default function ListExpense() {\n    const [categories, setCategories] = useState([])\n    const token = localStorage.getItem('etrackertoken'); \n\n    useEffect(() =>{\n        handleCategories(token)\n    }, [])\n\n    const handleCategories = async () => {\n        // fetchExpense(token).then(result => {\n        //     // console.log(...result)\n        //     setCategories(result);\n        // })\n        // .catch(err => {\n        //     console.log(err)\n        // })\n        // const data = await findSuggestions(token)\n        // console.log(data)\n        // setCategories(data)\n    }\n    const rows = [\n        { id: 1, name: 'Snow', date: 'Jon', /*age: 35*/ },\n        { id: 2, name: 'Lannister', date: 'Cersei'/*, age: 42*/ },\n        { id: 3, name: 'Lannister', date: 'Jaime'/*, age: 45*/ },\n        { id: 4, name: 'Stark', date: 'Arya'/*, age: 16*/ },\n        { id: 5, name: 'Targaryen', date: 'Daenerys'/*, age: null*/ },\n        { id: 6, name: 'Melisandre', date: null, /*age: 150*/ },\n        { id: 7, name: 'Clifford', date: 'Ferrara'/*, age: 44*/ },\n        { id: 8, name: 'Frances', date: 'Rossini'/*, age: 36*/ },\n        { id: 9, name: 'Roxie', date: 'Harvey'/*, age: 65*/ },\n    ];\n\n    // window.onload = function(){\n    //     // setExecuted(true)\n    //     handleCategories()\n    // }\n    console.log(categories)\n  return (\n    <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n    >\n        <div style={{ height: 400, width: '90%'}}>\n        <DataGrid rows={rows} columns={columns} pageSize={5} checkboxSelection />\n        </div>\n\n    </Grid>\n  );\n}\n","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/services/createCategory.js",[],["94","95"],"/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/services/categorySuggestions.js",["96"],"import axios from \"axios\";\n\nexport async function findSuggestions(token){\n    const config = {\n        headers: { Authorization: `Bearer ${token}` }\n    }\n    console.log(config)\n    axios.get('http://127.0.0.1:4000/expense/category/', config)\n    .then(result => {\n        console.log(\"___________REQUEST___________\")\n        console.log(result.data)\n        let data = result.data;\n        return \"klk\";\n    })\n    .catch(err => {\n        console.log(\"___________REQUEST_ERROR___________\")\n        console.log(err.response.data)\n        return \"error\"\n    })\n}","/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/services/promises.js",[],"/Users/andela/Documents/mvend-assignment/expense-tracker-mvend-frontend/src/components/expenseModel.js",["97","98","99"],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":18,"column":10,"nodeType":"106","messageId":"107","endLine":18,"endColumn":25},{"ruleId":"104","severity":1,"message":"108","line":43,"column":12,"nodeType":"106","messageId":"107","endLine":43,"endColumn":20},{"ruleId":"109","severity":1,"message":"110","line":51,"column":10,"nodeType":"111","endLine":51,"endColumn":12,"suggestions":"112"},{"ruleId":"104","severity":1,"message":"105","line":5,"column":10,"nodeType":"106","messageId":"107","endLine":5,"endColumn":25},{"ruleId":"104","severity":1,"message":"113","line":9,"column":5,"nodeType":"106","messageId":"107","endLine":9,"endColumn":22},{"ruleId":"109","severity":1,"message":"114","line":31,"column":8,"nodeType":"111","endLine":31,"endColumn":10,"suggestions":"115"},{"ruleId":"104","severity":1,"message":"116","line":33,"column":11,"nodeType":"106","messageId":"107","endLine":33,"endColumn":21},{"ruleId":"104","severity":1,"message":"117","line":4,"column":10,"nodeType":"106","messageId":"107","endLine":4,"endColumn":23},{"ruleId":"104","severity":1,"message":"118","line":4,"column":25,"nodeType":"106","messageId":"107","endLine":4,"endColumn":37},{"ruleId":"104","severity":1,"message":"105","line":6,"column":10,"nodeType":"106","messageId":"107","endLine":6,"endColumn":25},{"ruleId":"104","severity":1,"message":"119","line":32,"column":24,"nodeType":"106","messageId":"107","endLine":32,"endColumn":37},{"ruleId":"109","severity":1,"message":"120","line":37,"column":8,"nodeType":"111","endLine":37,"endColumn":10,"suggestions":"121"},{"ruleId":"100","replacedBy":"122"},{"ruleId":"102","replacedBy":"123"},{"ruleId":"104","severity":1,"message":"124","line":12,"column":13,"nodeType":"106","messageId":"107","endLine":12,"endColumn":17},{"ruleId":"104","severity":1,"message":"125","line":3,"column":10,"nodeType":"106","messageId":"107","endLine":3,"endColumn":19},{"ruleId":"104","severity":1,"message":"113","line":8,"column":5,"nodeType":"106","messageId":"107","endLine":8,"endColumn":22},{"ruleId":"104","severity":1,"message":"126","line":31,"column":12,"nodeType":"106","messageId":"107","endLine":31,"endColumn":24},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'findSuggestions' is defined but never used.","Identifier","unusedVar","'executed' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleSuggestions'. Either include it or remove the dependency array.","ArrayExpression",["129"],"'ValueGetterParams' is defined but never used.","React Hook useEffect has missing dependencies: 'handleCategories' and 'token'. Either include them or remove the dependency array.",["130"],"'handleOpen' is assigned a value but never used.","'fetchCategory' is defined but never used.","'fetchExpense' is defined but never used.","'setCategories' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["131"],["127"],["128"],"'data' is assigned a value but never used.","'useEffect' is defined but never used.","'expenseError' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},"Update the dependencies array to be: [handleSuggestions]",{"range":"138","text":"139"},"Update the dependencies array to be: [handleCategories, token]",{"range":"140","text":"141"},"Update the dependencies array to be: [token]",{"range":"142","text":"143"},[1763,1765],"[handleSuggestions]",[965,967],"[handleCategories, token]",[1106,1108],"[token]"]